[package]
name = "rs-ucan"
version = "0.1.0"
description = "Rust implementation of UCAN"
keywords = []
categories = []
include = ["/src", "/examples", "/benches", "README.md", "LICENSE"]
license = "Apache-2.0"
readme = "README.md"
edition = "2021"
rust-version = "1.67"
documentation = "https://docs.rs/rs-ucan"
repository = "https://github.com/ucan-wg/rs-ucan"
authors = ["Quinn Wilton <quinn@quinnwilton.com>"]

[lib]
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"
bench = false

[[bench]]
name = "a_benchmark"
harness = false
required-features = ["test_utils"]

[[example]]
name = "counterparts"
path = "examples/counterparts.rs"

[dependencies]
anyhow = "1.0.75"
async-trait = "0.1.73"
blst = "0.3.11"
cfg-if = "0.1"
cid = "0.10.1"
downcast-rs = "1.2.0"
dyn-clone = "1.0.14"
ecdsa = "0.16.8"
ed25519 = "2.2.2"
ed25519-dalek = { version = "2.0.0", features = ["rand_core"] }
erased-serde = "0.3.31"
instant = "0.1.12"
jose-b64 = { version = "0.1.2", features = ["serde", "json"] }
k256 = "0.13.1"
lazy_static = "1.4.0"
libipld-core = "0.16.0"
multibase = "0.9.1"
p256 = "0.13.2"
p384 = "0.13.0"
p521 = "0.13.0"
proptest = { version = "1.1", optional = true }
rsa = { version = "0.9.2", features = ["sha2"] }
semver = "1.0.19"
serde = { version = "1.0.188", features = ["derive"] }
serde_json = "1.0.107"
sha2 = "0.10.8"
signature = "2.1.0"
thiserror = "1.0"
unsigned-varint = "0.7.2"
url = "2.4.1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# `linkme` relies on linker features that aren't available in wasm32
linkme = "0.3.15"

[dev-dependencies]
criterion = "0.4"
multihash = "0.18.0"
proptest = "1.1"

[features]
default = ["did-key", "eddsa-verifier", "es256-verifier", "es256k-verifier", "es384-verifier", "ps256-verifier", "rs256-verifier"]
test_utils = ["proptest"]
did-key = []
eddsa-verifier = []
es256-verifier = []
es256k-verifier = []
es384-verifier = []
ps256-verifier = []
rs256-verifier = []

[metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
#
# See https://doc.rust-lang.org/cargo/reference/profiles.html for more info.
# [profile.release]
# Do not perform backtrace for panic on release builds.
## panic = 'abort'
# Perform optimizations on all codegen units.
## codegen-units = 1
# Tell `rustc` to optimize for small code size.
## opt-level = "s" # or 'z' to optimize "aggressively" for size
# Enable link time optimization.
## lto = true
# Amount of debug information.
# 0/false: no debug info at all; 1: line tables only; 2/true: full debug info
## debug = false
# Strip debug symbols
## strip = "symbols"

# Speedup build on macOS
# See https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#splitting-debug-information
[profile.dev]
split-debuginfo = "unpacked"
