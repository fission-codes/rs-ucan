[package]
name = "ucan"
version = "0.2.0"
description = "Rust implementation of UCAN"
keywords = ["capabilities", "authorization", "ucan"]
categories = []
include = ["/src", "/examples", "/benches", "README.md", "LICENSE"]
license = "Apache-2.0"
readme = "README.md"
edition = "2021"
rust-version = "1.75"
documentation = "https://docs.rs/ucan"
repository = "https://github.com/ucan-wg/rs-ucan"
authors = [
  "Quinn Wilton <quinn@quinnwilton.com>",
  "Brooklyn Zelenka <hello@brooklynzelenka.com>"
]

[lib]
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"
bench = false

[[bench]]
name = "a_benchmark" # FIXME rename
harness = false
required-features = ["test_utils"]

[[example]]
name = "counterparts"
path = "examples/counterparts.rs"

[dependencies]

# Docs
aquamarine = { version = "0.5", optional = true }

# Encoding
base64 = "0.21"

# Crypto
blst = { version = "0.3.11", optional = true, default-features = false }
bs58 = "0.5"

# Web Stack
did_url = "0.1"
ecdsa = { version = "0.16.8", features = ["alloc"], optional = true, default-features = false }
ed25519-dalek = { version = "2.0.0", features = ["rand_core"], optional = true }

# Code Convenience
derive_builder = "0.20"
enum-as-inner = "0.6"
getrandom = { version = "0.2", features = ["js", "rdrand"] }
k256 = { version = "0.13.1", features = ["ecdsa"], optional = true, default-features = false }

# Interplanetary Stack
libipld = { version = "0.16", optional = true }
libipld-cbor = "0.16"
libipld-core = { version = "0.16", features = ["serde-codec"] }
multihash = { version = "0.18" }
nom = "7.1"
nonempty = { version = "0.9" }
p256 = { version = "0.13.2", features = ["alloc", "ecdsa"], optional = true, default-features = false }
p384 = { version = "0.13.0", features = ["alloc", "ecdsa"], optional = true, default-features = false }
p521 = { version = "0.13.3", features = ["alloc", "ecdsa", "getrandom"], optional = true, default-features = false }
proptest = { version = "1.1", optional = true }
rsa = { version = "0.9.6", features = ["sha2", "std"], optional = true, default-features = false }
serde = { version = "1.0.188", features = ["derive"] }
serde_derive = "1.0"
signature = { version = "2.1.0", features = ["alloc"] }
thiserror = "1.0"
unsigned-varint = "0.7.2"
url = { version = "2.5", features = ["serde"] }
web-time = "0.2.3"
# FIXME actually use? async-signature = "0.4.0"

# FIXME also have a wasi target
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = { version = "0.1" }
js-sys = { version = "0.3" }
serde-wasm-bindgen = "0.6"
wasm-bindgen = "0.2"
wasm-bindgen-derive = "0.2"
# wasm-bindgen-futures = { version = "0.4" }
web-sys = { version = "0.3", features = ["Crypto", "CryptoKey", "CryptoKeyPair", "SubtleCrypto"] }

[dev-dependencies]
libipld = "0.16"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = "0.4"
proptest = { version = "*" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
criterion = { version = "0.4", default-features = false }
proptest = { version = "*", default-features = false, features = ["std"] }
wasm-bindgen-test = "0.2"

[features]
default = [
  "es256",
  "es256k",
  "es384",
  "es512",
  "rs256",
  "rs512",
  "eddsa",
  "bls",

  "ability-preset",

  # FIXME temp while developing
  # "test_utils",
]

test_utils = ["dep:proptest", "dep:libipld"]

eddsa = ["dep:ed25519-dalek"]
es256 = ["dep:p256"]
es256k = ["dep:k256"]
es384 = ["dep:p384"]
es512 = ["dep:ecdsa", "dep:p521"]
ps256 = ["dep:rsa"]
rs256 = ["dep:rsa"]
rs512 = ["dep:rsa"]
bls = ["dep:blst"]

ability-preset = ["ability-crud", "ability-msg", "ability-wasm"]
ability-crud = []
ability-msg = []
ability-wasm = []

mermaid_docs = ["aquamarine"]

[package.metadata.docs.rs]
all-features = true
#
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
cargo-args = ["--features='mermaid_docs'"]
#
# Speedup build on macOS
# See https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#splitting-debug-information
[profile.dev]
split-debuginfo = "unpacked"
